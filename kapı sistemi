#include <Wire.h> 
#include <SPI.h>
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <MFRC522.h>
#include <Servo.h>


#define sifreUzunlugu 8 

const int MFRC522_RST_PIN = 9;
const int MFRC522_SS_PIN = 10;


byte validKey1[4] = { 0x84, 0xE4, 0x5A, 0x1E };  
byte validKey2[4] = { 0x59, 0xA0, 0x44, 0x73 };  

char alinanSifre[sifreUzunlugu]; 
char istenilenSifre[sifreUzunlugu] = "123A456"; 
byte alinanSayac = 0, istenilenSayac = 0;
char customKey;

bool girisKabul = false;

// Keypad için
const byte keySatir = 4;
const byte keySutun = 4;

char hexaKeys[keySatir][keySutun] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte satirPinleri[keySatir] = {9, 8, 7, 6};
byte sutunPinleri[keySutun] = {5, 4, 3, 2};

LiquidCrystal_I2C lcd(0x27, 16, 2);  
Keypad customKeypad = Keypad(makeKeymap(hexaKeys), satirPinleri, sutunPinleri, keySatir, keySutun);
MFRC522 mfrc522(MFRC522_SS_PIN, MFRC522_RST_PIN); 
Servo kapiServo;

int servoPozisyon = 0;

/*
 *  arrayA ile arrayB' yi karşılatırır, aynı ise true değeri döner,
 *  farklı ise false değeri döner.
 */
bool isEqualArray(byte* arrayA, byte* arrayB, int length)
{
  for (int index = 0; index < length; index++)
  {
    if (arrayA[index] == arrayB[index])
    {
      
    }
    else
    return false;
  }
  return true;
}

/*
 * 
 *  Keypad alınan veri değerini siler.
 * 
 */
void clearData()
{
  while(alinanSayac !=0){
    alinanSifre[alinanSayac--] = 0; 
  }
  return;
}

void setup(){
  lcd.begin(); 
  lcd.backlight();

  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();
  kapiServo.attach(A3);
}

void loop(){

  if(!girisKabul)
  {
 
      lcd.setCursor(1,0);
      lcd.print("Sifre giriniz:  ");
    
      customKey = customKeypad.getKey();
      if (customKey){
        alinanSifre[alinanSayac] = customKey; 
        lcd.setCursor(alinanSayac,1); 
        lcd.print(alinanSifre[alinanSayac]); 
        alinanSayac++; 
        }
    
      if(alinanSayac == sifreUzunlugu-1){
        lcd.clear();
    
        if(!strcmp(alinanSifre, istenilenSifre)){
          girisKabul = true;
          }
        else{
          girisKabul = false;
          }
        

        clearData();  
      }
    
      if (mfrc522.PICC_IsNewCardPresent())
      {
        if (mfrc522.PICC_ReadCardSerial())
        {
          if (isEqualArray(mfrc522.uid.uidByte, validKey1, 4) || isEqualArray(mfrc522.uid.uidByte, validKey2, 4))
            girisKabul = true;
          else
            girisKabul = false;
            
          mfrc522.PICC_HaltA();
        }
      }
  }
  else
  {
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Giris kabul.");
      lcd.setCursor(0,1);
      lcd.print("Hosgeldiniz...");
 
      kapiServo.write(10); 
      delay(4000);

      kapiServo.write(90);

      delay(100);
      
      clearData();
      girisKabul = false;
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Giris yok.");
      lcd.setCursor(0,1);
      lcd.print("Tekrar...");
 
  }
}





